plugins {
    id 'java'
	id 'dev.architectury.loom' version '0.7.2-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
	accessWidener "src/main/resources/cpm.accesswidener"
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods/'
	}
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
}

sourceSets {
	shared {
		java {
			srcDir "../../CustomPlayerModel-main/shared/java"
		}
		resources {
			srcDir "../../CustomPlayerModel-main/shared/resources"
		}
	}
	main {
		java.srcDirs += shared.java.srcDirs
		resources.srcDirs += shared.resources.srcDirs
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings files("mapping-1.16.5-mapping.zip")
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
    annotationProcessor 'systems.manifold:manifold-preprocessor:2021.1.14'
	annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'

	modApi ("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:2.8.3")
	modImplementation ("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:2.8.3")

	modApi("me.shedaniel.cloth:cloth-config-fabric:4.11.26") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modImplementation "com.terraformersmc:modmenu:1.16.11"

	include ("me.shedaniel.cloth:cloth-config-fabric:4.11.26")
	include ("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:2.8.3")
	include ("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:2.8.3")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

tasks.withType(JavaCompile) {
	options.compilerArgs += ['-Xplugin:Manifold', '-AMC_1_16', '-AFABRIC']
}
